spring:
  datasource:
    hikari:
      connectionTimeout: 20000
      maximumPoolSize: 10
    url: jdbc:postgresql://${DB_HOST}:5432/${DB_DATABASE}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  security:
      oauth2:
        client:
          registration:
            google:
              clientId: ${GOOGLE_CLIENT_ID}
              clientSecret: ${GOOGLE_CLIENT_SECRET}
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
app:
  auth:
    tokenSecret: lnoienevnkn3k11od1o21o2eubi23b
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect

